//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Snoop.DebugListenerTab;
namespace Snoop.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
        <?xml version=""1.0"" encoding=""utf-16""?>
        <WINDOWPLACEMENT xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
        <length>44</length>
        <flags>0</flags>
        <showCmd>1</showCmd>
        <minPosition>
        <X>-1</X>
        <Y>-1</Y>
        </minPosition>
        <maxPosition>
        <X>-1</X>
        <Y>-1</Y>
        </maxPosition>
        <normalPosition>
        <Left>10</Left>
        <Top>10</Top>
        <Right>650</Right>
        <Bottom>490</Bottom>
        </normalPosition>
        </WINDOWPLACEMENT>
      ")]
        public WINDOWPLACEMENT SnoopUIWindowPlacement
        {
            get {
                return ((WINDOWPLACEMENT)(this["SnoopUIWindowPlacement"]));
            }
            set {
                this["SnoopUIWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
        <?xml version=""1.0"" encoding=""utf-16""?>
        <WINDOWPLACEMENT xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
        <length>44</length>
        <flags>0</flags>
        <showCmd>1</showCmd>
        <minPosition>
        <X>-1</X>
        <Y>-1</Y>
        </minPosition>
        <maxPosition>
        <X>-1</X>
        <Y>-1</Y>
        </maxPosition>
        <normalPosition>
        <Left>10</Left>
        <Top>10</Top>
        <Right>541</Right>
        <Bottom>36</Bottom>
        </normalPosition>
        </WINDOWPLACEMENT>
      ")]
        public WINDOWPLACEMENT AppChooserWindowPlacement
        {
            get {
                return ((WINDOWPLACEMENT)(this["AppChooserWindowPlacement"]));
            }
            set {
                this["AppChooserWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
        <?xml version=""1.0"" encoding=""utf-16""?>
        <WINDOWPLACEMENT xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
        <length>44</length>
        <flags>0</flags>
        <showCmd>1</showCmd>
        <minPosition>
        <X>-1</X>
        <Y>-1</Y>
        </minPosition>
        <maxPosition>
        <X>-1</X>
        <Y>-1</Y>
        </maxPosition>
        <normalPosition>
        <Left>10</Left>
        <Top>10</Top>
        <Right>541</Right>
        <Bottom>36</Bottom>
        </normalPosition>
        </WINDOWPLACEMENT>
      ")]
        public WINDOWPLACEMENT ZoomerWindowPlacement
        {
            get {
                return ((WINDOWPLACEMENT)(this["ZoomerWindowPlacement"]));
            }
            set {
                this["ZoomerWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
        <?xml version=""1.0""  encoding=""utf-16""?>
        <ArrayOfPropertyFilterSet xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
        <PropertyFilterSet>
        <DisplayName>Layout</DisplayName>
        <IsDefault>false</IsDefault>
        <IsEditCommand>false</IsEditCommand>
        <Properties>
        <string>width</string>
        <string>height</string>
        <string>actualwidth</string>
        <string>actualheight</string>
        <string>margin</string>
        <string>padding</string>
        <string>canvas.left</string>
        <string>canvas.top</string>
        </Properties>
        </PropertyFilterSet>
        <PropertyFilterSet>
        <DisplayName>Grid/Dock</DisplayName>
        <IsDefault>false</IsDefault>
        <IsEditCommand>false</IsEditCommand>
        <Properties>
        <string>grid.</string>
        <string>dockpanel.dock</string>
        </Properties>
        </PropertyFilterSet>
        <PropertyFilterSet>
        <DisplayName>Color</DisplayName>
        <IsDefault>false</IsDefault>
        <IsEditCommand>false</IsEditCommand>
        <Properties>
        <string>color</string>
        <string>background</string>
        <string>foreground</string>
        <string>borderbrush</string>
        <string>fill</string>
        <string>stroke</string>
        </Properties>
        </PropertyFilterSet>
        <PropertyFilterSet>
        <DisplayName>ItemsControl</DisplayName>
        <IsDefault>false</IsDefault>
        <IsEditCommand>false</IsEditCommand>
        <Properties>
        <string>items</string>
        <string>selected</string>
        </Properties>
        </PropertyFilterSet>
        </ArrayOfPropertyFilterSet>
        ")]
        public PropertyFilterSet[] PropertyFilterSets
        {
            get {
                return ((PropertyFilterSet[])(this["PropertyFilterSets"]));
            }
            set {
                this["PropertyFilterSets"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowDefaults {
            get {
                return ((bool)(this["ShowDefaults"]));
            }
            set {
                this["ShowDefaults"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowPreviewer {
            get {
                return ((bool)(this["ShowPreviewer"]));
            }
            set {
                this["ShowPreviewer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public SnoopSingleFilter [] SnoopDebugFilters
        {
            get {
                return ((SnoopSingleFilter [])(this["SnoopDebugFilters"]));
            }
            set {
                this["SnoopDebugFilters"] = value;
            }
        }
    }
}
